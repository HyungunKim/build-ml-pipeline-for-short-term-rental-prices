#!/usr/bin/env python
"""
{{cookiecutter.long_description}}
"""
import argparse
import logging
import wandb


logger = logging.getLogger(__name__)
console_handler = logging.StreamHandler()
file_handler = logging.FileHandler("{{cookiecutter.step_name}}.log")
file_handler.setLevel(logging.INFO)
formatter = logging.Formatter('%(asctime)s - %(levelname)s -%(filename)s/%(funcName)s - %(message)s')
console_handler.setFormatter(formatter)
file_handler.setFormatter(formatter)
logger.setLevel(logging.INFO)


def go(args):

    run = wandb.init(job_type="{{cookiecutter.job_type}}")
    run.config.update(args)

    # Download input artifact. This will also log that this script is using this
    # particular version of the artifact
    # artifact_local_path = run.use_artifact(args.input_artifact).file()

    ######################
    # YOUR CODE HERE     #
    ######################


if __name__ == "__main__":

    parser = argparse.ArgumentParser(description="{{cookiecutter.short_description}}")

{% for arg_name in cookiecutter.parameters.split(",") %}
    parser.add_argument(
        "--{{arg_name}}", 
        type=## INSERT TYPE HERE: str, float or int,
        help=## INSERT DESCRIPTION HERE,
        required=True
    )
{% endfor %}

    args = parser.parse_args()

    go(args)
